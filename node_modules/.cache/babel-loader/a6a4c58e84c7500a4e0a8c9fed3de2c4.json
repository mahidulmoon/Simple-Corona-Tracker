{"ast":null,"code":"var _jsxFileName = \"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\src\\\\Components\\\\AllDistricts.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { BsFillAlarmFill } from \"react-icons/bs\";\nexport default class AllDistricts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: [],\n      date: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://corona-bd.herokuapp.com/district').then(res => this.setState({\n      result: res.data.data,\n      date: res.data.updated_on\n    })).catch(err => console.log('error to get dictrictwise data'));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BsFillAlarmFill, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }\n    }, \"Update date: \", this.state.date)), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"District Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"District\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Prev_count\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"New Count\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"New positive\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.state.result.map(district => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, district.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, district.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, district.prev_count), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, district.count), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, district.count - district.prev_count))))), \" \");\n  }\n\n}","map":{"version":3,"sources":["F:/Fullstack WEB/CoronaTracker/coronafront/src/Components/AllDistricts.js"],"names":["React","Component","Table","axios","BsFillAlarmFill","AllDistricts","state","result","date","componentDidMount","get","then","res","setState","data","updated_on","catch","err","console","log","render","map","district","id","name","prev_count","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDK,KADgD,GAC1C;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,IAAI,EAAC;AAFH,KAD0C;AAAA;;AAKhDC,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAU,0CAAV,EAAsDC,IAAtD,CAA2DC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACN,MAAAA,MAAM,EAACK,GAAG,CAACE,IAAJ,CAASA,IAAjB;AAAsBN,MAAAA,IAAI,EAACI,GAAG,CAACE,IAAJ,CAASC;AAApC,KAAd,CAAlE,EAAkIC,KAAlI,CAAwIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAA/I;AACH;;AACHC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAAR,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAKd,KAAL,CAAWE,IAA5B,CAAR,CAFJ,eAGK,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,CADF,CADK,eAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAsBC,QAAQ,iBAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACC,EAAd,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,QAAQ,CAACE,IAAd,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACG,UAAd,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,QAAQ,CAACI,KAAd,CAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACG,UAA/B,CALA,CADH,CADH,CAVK,CAHL,MADF;AA4BD;;AArCiD","sourcesContent":["import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { BsFillAlarmFill } from \"react-icons/bs\";\r\nexport default class AllDistricts extends Component {\r\n    state={\r\n        result:[],\r\n        date:'',\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona-bd.herokuapp.com/district').then(res => this.setState({result:res.data.data,date:res.data.updated_on})).catch(err => console.log('error to get dictrictwise data'));\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n          <center><h2><BsFillAlarmFill /></h2></center>\r\n          <center><p>Update date: {this.state.date}</p></center>\r\n           <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>District Id</th>\r\n          <th>District</th>\r\n          <th>Prev_count</th>\r\n          <th>New Count</th>\r\n          <th>New positive</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.result.map(district => \r\n            <tr>\r\n            <td>{district.id}</td>\r\n            <td>{district.name}</td>\r\n            <td>{district.prev_count}</td>\r\n            <td>{district.count}</td>\r\n            <td>{district.count - district.prev_count}</td>\r\n          </tr>    \r\n        )}\r\n        \r\n      </tbody>\r\n    </Table> </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
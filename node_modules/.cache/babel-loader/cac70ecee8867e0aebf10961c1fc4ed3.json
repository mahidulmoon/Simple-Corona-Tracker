{"ast":null,"code":"import _classCallCheck from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Card,ProgressBar}from'react-bootstrap';import axios from'axios';import{FcDataRecovery,FcAcceptDatabase,FcBadDecision}from\"react-icons/fc\";var WorldCard=/*#__PURE__*/function(_Component){_inherits(WorldCard,_Component);var _super=_createSuper(WorldCard);function WorldCard(){var _this;_classCallCheck(this,WorldCard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={result:{confirmed:'',recovered:'',deaths:'',date:''}};return _this;}_createClass(WorldCard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('https://covid19.mathdro.id/api').then(function(res){return _this2.setState({result:{confirmed:res.data.confirmed.value,recovered:res.data.recovered.value,deaths:res.data.deaths.value,date:res.data.lastUpdate}});}).catch(function(err){return console.log('error to get worlddata');});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"WorldWide Results\")),/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Date: \",this.state.result.date.slice(0,10),\" Update Time:\",this.state.result.date.slice(11,16))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(FcDataRecovery,null),this.state.result.confirmed),/*#__PURE__*/React.createElement(Card.Text,null,\"Confirmed\")))),/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'green'}},/*#__PURE__*/React.createElement(FcAcceptDatabase,null),this.state.result.recovered),/*#__PURE__*/React.createElement(Card.Text,null,\"Recovered\")))),/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'red'}},/*#__PURE__*/React.createElement(FcBadDecision,null),this.state.result.deaths),/*#__PURE__*/React.createElement(Card.Text,null,\"Deaths\"))))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(ProgressBar,null,/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"success\",label:\"\".concat((this.state.result.recovered*100/this.state.result.confirmed).toFixed(2),\"%\"),now:parseInt(this.state.result.recovered)*100/parseInt(this.state.result.confirmed),key:1}),/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"danger\",label:\"\".concat((this.state.result.deaths*100/this.state.result.confirmed).toFixed(2),\"%\"),now:parseInt(this.state.result.deaths)*100/parseInt(this.state.result.confirmed),key:2})));}}]);return WorldCard;}(Component);export{WorldCard as default};","map":{"version":3,"sources":["F:/Fullstack WEB/CoronaTracker/coronafront/src/Components/WorldCard.js"],"names":["React","Component","Row","Col","Card","ProgressBar","axios","FcDataRecovery","FcAcceptDatabase","FcBadDecision","WorldCard","state","result","confirmed","recovered","deaths","date","get","then","res","setState","data","value","lastUpdate","catch","err","console","log","slice","width","color","toFixed","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Row,Col,Card,ProgressBar} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { FcDataRecovery,FcAcceptDatabase,FcBadDecision } from \"react-icons/fc\";\r\nexport default class WorldCard extends Component {\r\n    state={\r\n        result:{\r\n            confirmed:'',recovered:'',deaths:'',date:''\r\n        },\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://covid19.mathdro.id/api').then(res=> this.setState({result:{confirmed:res.data.confirmed.value,recovered:res.data.recovered.value,deaths:res.data.deaths.value,date:res.data.lastUpdate}})).catch(err=>console.log('error to get worlddata'));\r\n    }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <center><h2>WorldWide Results</h2></center>\r\n            <center><p>Date: {this.state.result.date.slice(0,10)} Update Time:{this.state.result.date.slice(11,16)}</p></center>\r\n                <Row >\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title><FcDataRecovery />{this.state.result.confirmed}</Card.Title>\r\n                            <Card.Text>\r\n                            Confirmed \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><FcAcceptDatabase/>{this.state.result.recovered}</Card.Title>\r\n                            <Card.Text>\r\n                            Recovered\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><FcBadDecision/>{this.state.result.deaths}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <ProgressBar>\r\n                                <ProgressBar striped variant=\"success\" label={`${((this.state.result.recovered*100)/this.state.result.confirmed).toFixed(2)}%`} now={(parseInt(this.state.result.recovered)*100)/parseInt(this.state.result.confirmed)} key={1} />\r\n                                \r\n                                <ProgressBar striped variant=\"danger\" label={`${((this.state.result.deaths*100)/this.state.result.confirmed).toFixed(2)}%`} now={(parseInt(this.state.result.deaths)*100)/parseInt(this.state.result.confirmed)} key={2} />\r\n                            </ProgressBar>\r\n        </div>\r\n        );\r\n    }\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"F:\\\\Fullstack WEB\\\\CoronaTracker\\\\coronafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Card,ProgressBar}from'react-bootstrap';import{FcDataRecovery,FcAcceptDatabase,FcBadDecision}from\"react-icons/fc\";import{BiTestTube}from\"react-icons/bi\";import{AiFillCalculator}from\"react-icons/ai\";import{BsFillAlarmFill,BsFillHeartFill,BsFillPersonPlusFill,BsFillPersonDashFill}from\"react-icons/bs\";import axios from'axios';var Bangladesh=/*#__PURE__*/function(_Component){_inherits(Bangladesh,_Component);var _super=_createSuper(Bangladesh);function Bangladesh(){var _this;_classCallCheck(this,Bangladesh);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={result:{totaldeath:'',death24:'',totalpositive:'',positive24:'',totalrecovered:'',recovered24:'',totaltest:'',test24:'',date:''}};return _this;}_createClass(Bangladesh,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('https://corona-bd.herokuapp.com/stats').then(function(res){return _this2.setState({result:{totaldeath:res.data.death.total,death24:res.data.death.last24,totalpositive:res.data.positive.total,positive24:res.data.positive.last24,totalrecovered:res.data.recovered.total,recovered24:res.data.recovered.last24,totaltest:res.data.test.total,test24:res.data.test.last24,date:res.data.updated_on}});}).catch(function(err){return console.log('error to get worlddata');});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Bangladesh\")),/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Update at: \",this.state.result.date,\" \")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:4},/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(AiFillCalculator,null),\"Total\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(BiTestTube,null),\" \",this.state.result.totaltest),/*#__PURE__*/React.createElement(Card.Text,null,\"Tests\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'orange'}},/*#__PURE__*/React.createElement(FcDataRecovery,null),\" \",this.state.result.totalpositive),/*#__PURE__*/React.createElement(Card.Text,null,\"Confirmed\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'green'}},/*#__PURE__*/React.createElement(FcAcceptDatabase,null),\" \",this.state.result.totalrecovered),/*#__PURE__*/React.createElement(Card.Text,null,\"ReCovered\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'red'}},/*#__PURE__*/React.createElement(FcBadDecision,null),\" \",this.state.result.totaldeath),/*#__PURE__*/React.createElement(Card.Text,null,\"Deaths\"))))),/*#__PURE__*/React.createElement(Col,{sm:8},/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(BsFillAlarmFill,null),\" Last 24 Hours\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(BiTestTube,null),\" \",this.state.result.test24),/*#__PURE__*/React.createElement(Card.Text,null,\"New Tests\"))))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem',height:150}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'orange'}},/*#__PURE__*/React.createElement(BsFillPersonPlusFill,null),\" \",this.state.result.positive24),/*#__PURE__*/React.createElement(Card.Text,null,\"New Positive\")))),/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem',height:150}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'green'}},/*#__PURE__*/React.createElement(BsFillHeartFill,null),\" \",this.state.result.recovered24),/*#__PURE__*/React.createElement(Card.Text,null,\"Newly ReCovered\")))),/*#__PURE__*/React.createElement(Col,{sm:true},/*#__PURE__*/React.createElement(Card,{style:{width:'18rem',height:150}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{style:{color:'red'}},/*#__PURE__*/React.createElement(BsFillPersonDashFill,null),\" \",this.state.result.death24),/*#__PURE__*/React.createElement(Card.Text,null,\"Deaths\"))))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,\"In 24 hrs\"),/*#__PURE__*/React.createElement(ProgressBar,null,/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"success\",label:\"\".concat((this.state.result.recovered24*100/this.state.result.test24).toFixed(2),\"%\"),now:this.state.result.recovered24*100/this.state.result.test24,key:1}),/*#__PURE__*/React.createElement(ProgressBar,{variant:\"warning\",label:\"\".concat((this.state.result.positive24*100/this.state.result.test24).toFixed(2),\"%\"),now:this.state.result.positive24*100/this.state.result.test24,key:2}),/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"danger\",label:\"\".concat((this.state.result.death24*100/this.state.result.test24).toFixed(2),\"%\"),now:this.state.result.death24*100/this.state.result.test24,key:3})),/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"Death: \",(this.state.result.death24*100/this.state.result.test24).toFixed(2),\"%\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h5\",null,\"Untill Now\"),/*#__PURE__*/React.createElement(ProgressBar,null,/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"success\",label:\"\".concat((this.state.result.totalrecovered*100/this.state.result.totaltest).toFixed(2),\"%\"),now:this.state.result.totalrecovered*100/this.state.result.totaltest,key:1}),/*#__PURE__*/React.createElement(ProgressBar,{variant:\"warning\",label:\"\".concat((this.state.result.totalpositive*100/this.state.result.totaltest).toFixed(2),\"%\"),now:this.state.result.totalpositive*100/this.state.result.totaltest,key:2}),/*#__PURE__*/React.createElement(ProgressBar,{striped:true,variant:\"danger\",label:\"\".concat((this.state.result.totaldeath*100/this.state.result.totaltest).toFixed(2),\"%\"),now:this.state.result.totaldeath*100/this.state.result.totaltest,key:3})),/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"Death: \",(this.state.result.totaldeath*100/this.state.result.totaltest).toFixed(2),\"%\")))));}}]);return Bangladesh;}(Component);export{Bangladesh as default};","map":{"version":3,"sources":["F:/Fullstack WEB/CoronaTracker/coronafront/src/Components/Bangladesh.js"],"names":["React","Component","Row","Col","Card","ProgressBar","FcDataRecovery","FcAcceptDatabase","FcBadDecision","BiTestTube","AiFillCalculator","BsFillAlarmFill","BsFillHeartFill","BsFillPersonPlusFill","BsFillPersonDashFill","axios","Bangladesh","state","result","totaldeath","death24","totalpositive","positive24","totalrecovered","recovered24","totaltest","test24","date","get","then","res","setState","data","death","total","last24","positive","recovered","test","updated_on","catch","err","console","log","width","color","height","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Row,Col,Card,ProgressBar} from 'react-bootstrap';\r\nimport { FcDataRecovery,FcAcceptDatabase,FcBadDecision } from \"react-icons/fc\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiFillCalculator } from \"react-icons/ai\";\r\nimport { BsFillAlarmFill,BsFillHeartFill,BsFillPersonPlusFill,BsFillPersonDashFill } from \"react-icons/bs\";\r\nimport axios from 'axios';\r\nexport default class Bangladesh extends Component {\r\n    state ={\r\n        result:{\r\n            totaldeath: '',death24:'',totalpositive:'',positive24:'',totalrecovered:'',recovered24:'',totaltest:'',test24:'',date:''\r\n    }\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona-bd.herokuapp.com/stats').then(res=> this.setState({result:{totaldeath:res.data.death.total,death24:res.data.death.last24,totalpositive:res.data.positive.total,positive24:res.data.positive.last24,totalrecovered:res.data.recovered.total,recovered24:res.data.recovered.last24,totaltest:res.data.test.total,test24:res.data.test.last24,date:res.data.updated_on}})).catch(err=>console.log('error to get worlddata'));\r\n    }\r\n  render() {\r\n      \r\n    return (\r\n        <div> \r\n            <center><h1>Bangladesh</h1></center>\r\n            <center><p>Update at: {this.state.result.date} </p></center>\r\n            <br />\r\n            <Row>\r\n                <Col sm={4}>\r\n                <h2><AiFillCalculator />Total</h2>\r\n                    <Row>\r\n                        \r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title><BiTestTube /> {this.state.result.totaltest}</Card.Title>\r\n                            <Card.Text>\r\n                            Tests\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'orange'}}><FcDataRecovery /> {this.state.result.totalpositive}</Card.Title>\r\n                            <Card.Text>\r\n                            Confirmed \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><FcAcceptDatabase/> {this.state.result.totalrecovered}</Card.Title>\r\n                            <Card.Text>\r\n                            ReCovered \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><FcBadDecision/> {this.state.result.totaldeath}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={8}>\r\n                    <center><h2><BsFillAlarmFill /> Last 24 Hours</h2></center>\r\n                    <Row>\r\n                        \r\n                        <Col >\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title><BiTestTube /> {this.state.result.test24}</Card.Title>\r\n                            <Card.Text>\r\n                            New Tests\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    \r\n                <Row>\r\n                <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150 }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'orange'}}><BsFillPersonPlusFill /> {this.state.result.positive24}</Card.Title>\r\n                            <Card.Text>\r\n                            New Positive\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150  }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><BsFillHeartFill /> {this.state.result.recovered24}</Card.Title>\r\n                            <Card.Text>\r\n                            Newly ReCovered \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150  }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><BsFillPersonDashFill /> {this.state.result.death24}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <div>\r\n                    <h5>In 24 hrs</h5>\r\n                    <ProgressBar>\r\n                        <ProgressBar striped variant=\"success\" label={`${((this.state.result.recovered24*100)/this.state.result.test24).toFixed(2)}%`}  now={(this.state.result.recovered24*100)/this.state.result.test24} key={1} />\r\n                        <ProgressBar variant=\"warning\" label={`${((this.state.result.positive24*100)/this.state.result.test24).toFixed(2)}%`} now={(this.state.result.positive24*100)/this.state.result.test24} key={2} />\r\n                        <ProgressBar striped variant=\"danger\" label={`${((this.state.result.death24*100)/this.state.result.test24).toFixed(2)}%`} now={(this.state.result.death24*100)/this.state.result.test24} key={3} />\r\n                    </ProgressBar>\r\n                    <p style={{color:'red'}}>Death: {((this.state.result.death24*100)/this.state.result.test24).toFixed(2)}%</p>\r\n                    \r\n                    \r\n                    \r\n                    < hr />\r\n                    <h5>Untill Now</h5>\r\n                    <ProgressBar>\r\n                        <ProgressBar striped variant=\"success\" label={`${((this.state.result.totalrecovered*100)/this.state.result.totaltest).toFixed(2)}%`}  now={(this.state.result.totalrecovered*100)/this.state.result.totaltest} key={1} />\r\n                        <ProgressBar variant=\"warning\" label={`${((this.state.result.totalpositive*100)/this.state.result.totaltest).toFixed(2)}%`} now={(this.state.result.totalpositive*100)/this.state.result.totaltest} key={2} />\r\n                        <ProgressBar striped variant=\"danger\" label={`${((this.state.result.totaldeath*100)/this.state.result.totaltest).toFixed(2)}%`} now={(this.state.result.totaldeath*100)/this.state.result.totaltest} key={3} />\r\n                    </ProgressBar>\r\n                    <p style={{color:'red'}}>Death: {((this.state.result.totaldeath*100)/this.state.result.totaltest).toFixed(2)}%</p>\r\n                </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
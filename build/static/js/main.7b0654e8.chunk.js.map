{"version":3,"sources":["Components/NavigationBar.js","Components/FooterFile.js","Components/BodyPage.js","Components/WorldCard.js","Components/AllCountry.js","Components/Home.js","Components/Bangladesh.js","Components/AllDistricts.js","Components/IndexFile.js","App.js","serviceWorker.js","index.js"],"names":["Navigationbar","Navbar","bg","variant","expand","fixed","Brand","href","Nav","className","Link","Component","FooterFile","Container","BodyPage","this","props","children","WorldCard","state","result","confirmed","recovered","deaths","date","axios","get","then","res","setState","data","value","lastUpdate","catch","err","console","log","slice","Row","Col","sm","Card","style","width","Body","Title","Text","color","ProgressBar","striped","label","toFixed","now","parseInt","key","AllCountry","countries","countryname","countryResult","countryclick","name","getCountryResult","e","Fragment","id","autocomplete","type","placeholder","onChange","target","Button","onClick","map","country","Home","Bangladesh","totaldeath","death24","totalpositive","positive24","totalrecovered","recovered24","totaltest","test24","death","total","last24","positive","test","updated_on","height","AllDistricts","Table","bordered","hover","size","district","prev_count","count","IndexFile","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sSAEqBA,E,uKAEjB,OACI,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,MAAM,OACnD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,kBACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,KAAf,QACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,aAAf,gBACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,OAAf,gBAIJ,kC,GAbmCI,a,QCAtBC,E,uKAEjB,OAEQ,4BAAQH,UAAU,eACd,kBAACI,EAAA,EAAD,KACA,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,aAGf,yBAAKA,UAAU,OACf,uBAAGA,UAAU,sBAAb,4BAC6B,gDAD7B,sD,GAXoBE,aCAnBG,E,uKAEjB,OACE,yBAAKL,UAAU,iBAAgB,kBAACI,EAAA,EAAD,KAAYE,KAAKC,MAAMC,e,GAHtBN,a,wECEjBO,E,4MACjBC,MAAM,CACFC,OAAO,CACHC,UAAU,GAAGC,UAAU,GAAGC,OAAO,GAAGC,KAAK,K,kEAG7B,IAAD,OACfC,IAAMC,IAAI,kCAAkCC,MAAK,SAAAC,GAAG,OAAG,EAAKC,SAAS,CAACT,OAAO,CAACC,UAAUO,EAAIE,KAAKT,UAAUU,MAAMT,UAAUM,EAAIE,KAAKR,UAAUS,MAAMR,OAAOK,EAAIE,KAAKP,OAAOQ,MAAMP,KAAKI,EAAIE,KAAKE,iBAAeC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,+B,+BAGrO,OACA,6BACI,gCAAQ,kDACR,gCAAQ,oCAAUrB,KAAKI,MAAMC,OAAOI,KAAKa,MAAM,EAAE,IAAzC,gBAA2DtB,KAAKI,MAAMC,OAAOI,KAAKa,MAAM,GAAG,MAC/F,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEnB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAY,kBAAC,IAAD,MAAmB9B,KAAKI,MAAMC,OAAOC,WACjD,kBAACoB,EAAA,EAAKK,KAAN,qBAOR,kBAACP,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEnB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,UAAU,kBAAC,IAAD,MAAoBhC,KAAKI,MAAMC,OAAOE,WAC1E,kBAACmB,EAAA,EAAKK,KAAN,qBAOR,kBAACP,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEnB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,QAAQ,kBAAC,IAAD,MAAiBhC,KAAKI,MAAMC,OAAOG,QACrE,kBAACkB,EAAA,EAAKK,KAAN,mBAQZ,6BACA,kBAACE,EAAA,EAAD,KACgB,kBAACA,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,UAAU+C,MAAK,WAAmC,IAA5BnC,KAAKI,MAAMC,OAAOE,UAAeP,KAAKI,MAAMC,OAAOC,WAAW8B,QAAQ,GAA7E,KAAoFC,IAA4C,IAAtCC,SAAStC,KAAKI,MAAMC,OAAOE,WAAgB+B,SAAStC,KAAKI,MAAMC,OAAOC,WAAYiC,IAAK,IAE7N,kBAACN,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,SAAS+C,MAAK,WAAgC,IAAzBnC,KAAKI,MAAMC,OAAOG,OAAYR,KAAKI,MAAMC,OAAOC,WAAW8B,QAAQ,GAA1E,KAAiFC,IAAyC,IAAnCC,SAAStC,KAAKI,MAAMC,OAAOG,QAAa8B,SAAStC,KAAKI,MAAMC,OAAOC,WAAYiC,IAAK,U,GAxD/M3C,a,QCAlB4C,E,4MACjBpC,MAAM,CACFqC,UAAU,GACVC,YAAY,GACZC,cAAc,CACVrC,UAAU,GAAGC,UAAU,GAAGC,OAAO,GAAGC,KAAK,K,EAMjDmC,aAAe,SAAAC,GACX,EAAK/B,SAAS,CAAC4B,YAAYG,K,EAE/BC,iBAAkB,SAAAC,GACdrC,IAAMC,IAAN,mDAAsD,EAAKP,MAAMsC,YAAjE,MAAiF9B,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAC6B,cAAc,CAACrC,UAAUO,EAAIE,KAAKT,UAAUU,MAAMT,UAAUM,EAAIE,KAAKR,UAAUS,MAAMR,OAAOK,EAAIE,KAAKP,OAAOQ,MAAMP,KAAKI,EAAIE,KAAKE,kB,kEAP5N,IAAD,OACfP,IAAMC,IAAI,4CAA4CC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAC2B,UAAU5B,EAAIE,KAAK0B,eAAavB,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAI,kC,+BAQrI,IAAD,OACP,OACE,kBAAC,IAAM2B,SAAP,KAEM,yBAAKC,GAAG,UAAUvD,UAAU,uGACxB,0BAAMA,UAAU,gCAChB,0BAAMA,UAAU,QAAhB,oBAEJ,yBAAKuD,GAAG,UAAUvD,UAAU,qEACxB,yBAAKA,UAAU,WACX,yBAAKA,UAAU,aACP,yBAAKA,UAAU,gFACX,wBAAIA,UAAU,OAAd,aACA,0BAAMuD,GAAG,kBAAkBvD,UAAU,yBAGzC,yBAAKA,UAAU,0DACX,2BAAOwD,aAAa,MAAMD,GAAG,SAASE,KAAK,OAAOC,YAAY,SAASC,SAAU,SAACN,GAAD,OAAO,EAAKjC,SAAS,CAAC4B,YAAYK,EAAEO,OAAOtC,SAASA,MAAOhB,KAAKI,MAAMsC,YAAahD,UAAU,2BAC9K,kBAAC6D,EAAA,EAAD,CAAQC,QAASxD,KAAK8C,kBAAtB,eAEJ,yBAAKpD,UAAU,2CACX,wBAAIA,UAAU,aAAauD,GAAG,kBACzBjD,KAAKI,MAAMqC,UAAUgB,KAAI,SAAAC,GAAO,OAC7B,wBAAIhE,UAAU,6FAA6F8D,QAAS,kBAAI,EAAKZ,aAAac,EAAQb,QAASa,EAAQb,YAKvL,yBAAKnD,UAAU,mBACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,YAAd,SAA+B,uBAAGuD,GAAG,kBAAkBvD,UAAU,kBAAkBM,KAAKI,MAAMuC,cAAclC,KAAKa,MAAM,EAAE,OAE7H,yBAAK5B,UAAU,WAEX,uBAAGA,UAAU,eAAc,0BAAMuD,GAAG,UAEpC,sDAEA,qCANJ,IAMkB,0BAAMA,GAAG,mBAAmBjD,KAAKI,MAAMuC,cAAcrC,WAEnE,6BAEA,6CAEA,qCAZJ,IAYkB,0BAAM2C,GAAG,eAAetB,MAAO,CAACK,MAAM,QAAShC,KAAKI,MAAMuC,cAAcnC,QAEtF,6BAEA,sDAEA,qCAlBJ,IAkBkB,0BAAMyC,GAAG,kBAAkBtB,MAAO,CAACK,MAAM,UAAWhC,KAAKI,MAAMuC,cAAcpC,WAE3F,6BAEA,6BACA,kBAAC0B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,UAAU+C,MAAK,WAA0C,IAAnCnC,KAAKI,MAAMuC,cAAcpC,UAAeP,KAAKI,MAAMuC,cAAcrC,WAAW8B,QAAQ,GAA3F,KAAkGC,IAAmD,IAA7CC,SAAStC,KAAKI,MAAMuC,cAAcpC,WAAgB+B,SAAStC,KAAKI,MAAMuC,cAAcrC,WAAYiC,IAAK,IAEzP,kBAACN,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,SAAS+C,MAAK,WAAuC,IAAhCnC,KAAKI,MAAMuC,cAAcnC,OAAYR,KAAKI,MAAMuC,cAAcrC,WAAW8B,QAAQ,GAAxF,KAA+FC,IAAgD,IAA1CC,SAAStC,KAAKI,MAAMuC,cAAcnC,QAAa8B,SAAStC,KAAKI,MAAMuC,cAAcrC,WAAYiC,IAAK,c,GA3E1O3C,aCDnB+D,E,uKAEjB,OACE,kBAAC,IAAMX,SAAP,KACI,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,W,GANwBpD,a,wBCIbgE,E,4MACjBxD,MAAO,CACHC,OAAO,CACHwD,WAAY,GAAGC,QAAQ,GAAGC,cAAc,GAAGC,WAAW,GAAGC,eAAe,GAAGC,YAAY,GAAGC,UAAU,GAAGC,OAAO,GAAG3D,KAAK,K,kEAG1G,IAAD,OACfC,IAAMC,IAAI,yCAAyCC,MAAK,SAAAC,GAAG,OAAG,EAAKC,SAAS,CAACT,OAAO,CAACwD,WAAWhD,EAAIE,KAAKsD,MAAMC,MAAMR,QAAQjD,EAAIE,KAAKsD,MAAME,OAAOR,cAAclD,EAAIE,KAAKyD,SAASF,MAAMN,WAAWnD,EAAIE,KAAKyD,SAASD,OAAON,eAAepD,EAAIE,KAAKR,UAAU+D,MAAMJ,YAAYrD,EAAIE,KAAKR,UAAUgE,OAAOJ,UAAUtD,EAAIE,KAAK0D,KAAKH,MAAMF,OAAOvD,EAAIE,KAAK0D,KAAKF,OAAO9D,KAAKI,EAAIE,KAAK2D,iBAAexD,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,+B,+BAI7Z,OACI,6BACI,gCAAQ,2CACR,gCAAQ,yCAAerB,KAAKI,MAAMC,OAAOI,KAAjC,MACR,6BACA,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,4BAAI,kBAAC,IAAD,MAAJ,SACI,kBAACF,EAAA,EAAD,KAEI,kBAACG,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAY,kBAAC,IAAD,MAAZ,IAA4B9B,KAAKI,MAAMC,OAAO8D,WAC9C,kBAACzC,EAAA,EAAKK,KAAN,iBAOR,kBAACR,EAAA,EAAD,KAEI,kBAACG,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,WAAW,kBAAC,IAAD,MAArC,IAAyDhC,KAAKI,MAAMC,OAAO0D,eAC3E,kBAACrC,EAAA,EAAKK,KAAN,qBAOR,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,UAAU,kBAAC,IAAD,MAApC,IAAyDhC,KAAKI,MAAMC,OAAO4D,gBAC3E,kBAACvC,EAAA,EAAKK,KAAN,qBAOR,kBAACR,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,QAAQ,kBAAC,IAAD,MAAlC,IAAoDhC,KAAKI,MAAMC,OAAOwD,YACtE,kBAACnC,EAAA,EAAKK,KAAN,mBAQZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,GACL,gCAAQ,4BAAI,kBAAC,IAAD,MAAJ,mBACR,kBAACF,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KACA,kBAACE,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,UAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAY,kBAAC,IAAD,MAAZ,IAA4B9B,KAAKI,MAAMC,OAAO+D,QAC9C,kBAAC1C,EAAA,EAAKK,KAAN,sBAQR,6BAGJ,kBAACR,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACH,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAAQ+C,OAAO,MAElC,kBAACjD,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,WAAW,kBAAC,IAAD,MAArC,IAA+DhC,KAAKI,MAAMC,OAAO2D,YACjF,kBAACtC,EAAA,EAAKK,KAAN,wBAOR,kBAACP,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAAQ+C,OAAO,MAElC,kBAACjD,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,UAAU,kBAAC,IAAD,MAApC,IAAyDhC,KAAKI,MAAMC,OAAO6D,aAC3E,kBAACxC,EAAA,EAAKK,KAAN,2BAOR,kBAACP,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,QAAQ+C,OAAO,MAElC,kBAACjD,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYH,MAAO,CAACK,MAAM,QAAQ,kBAAC,IAAD,MAAlC,IAA4DhC,KAAKI,MAAMC,OAAOyD,SAC9E,kBAACpC,EAAA,EAAKK,KAAN,mBAQZ,6BACA,6BACI,yCACA,kBAACE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,UAAU+C,MAAK,WAAqC,IAA9BnC,KAAKI,MAAMC,OAAO6D,YAAiBlE,KAAKI,MAAMC,OAAO+D,QAAQhC,QAAQ,GAA5E,KAAoFC,IAAoC,IAA9BrC,KAAKI,MAAMC,OAAO6D,YAAiBlE,KAAKI,MAAMC,OAAO+D,OAAQ7B,IAAK,IACxM,kBAACN,EAAA,EAAD,CAAa7C,QAAQ,UAAU+C,MAAK,WAAoC,IAA7BnC,KAAKI,MAAMC,OAAO2D,WAAgBhE,KAAKI,MAAMC,OAAO+D,QAAQhC,QAAQ,GAA3E,KAAkFC,IAAmC,IAA7BrC,KAAKI,MAAMC,OAAO2D,WAAgBhE,KAAKI,MAAMC,OAAO+D,OAAQ7B,IAAK,IAC7L,kBAACN,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,SAAS+C,MAAK,WAAiC,IAA1BnC,KAAKI,MAAMC,OAAOyD,QAAa9D,KAAKI,MAAMC,OAAO+D,QAAQhC,QAAQ,GAAxE,KAA+EC,IAAgC,IAA1BrC,KAAKI,MAAMC,OAAOyD,QAAa9D,KAAKI,MAAMC,OAAO+D,OAAQ7B,IAAK,KAElM,uBAAGZ,MAAO,CAACK,MAAM,QAAjB,WAA6D,IAA1BhC,KAAKI,MAAMC,OAAOyD,QAAa9D,KAAKI,MAAMC,OAAO+D,QAAQhC,QAAQ,GAApG,KAIA,6BACA,0CACA,kBAACH,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,UAAU+C,MAAK,WAAwC,IAAjCnC,KAAKI,MAAMC,OAAO4D,eAAoBjE,KAAKI,MAAMC,OAAO8D,WAAW/B,QAAQ,GAAlF,KAA0FC,IAAuC,IAAjCrC,KAAKI,MAAMC,OAAO4D,eAAoBjE,KAAKI,MAAMC,OAAO8D,UAAW5B,IAAK,IACpN,kBAACN,EAAA,EAAD,CAAa7C,QAAQ,UAAU+C,MAAK,WAAuC,IAAhCnC,KAAKI,MAAMC,OAAO0D,cAAmB/D,KAAKI,MAAMC,OAAO8D,WAAW/B,QAAQ,GAAjF,KAAwFC,IAAsC,IAAhCrC,KAAKI,MAAMC,OAAO0D,cAAmB/D,KAAKI,MAAMC,OAAO8D,UAAW5B,IAAK,IACzM,kBAACN,EAAA,EAAD,CAAaC,SAAO,EAAC9C,QAAQ,SAAS+C,MAAK,WAAoC,IAA7BnC,KAAKI,MAAMC,OAAOwD,WAAgB7D,KAAKI,MAAMC,OAAO8D,WAAW/B,QAAQ,GAA9E,KAAqFC,IAAmC,IAA7BrC,KAAKI,MAAMC,OAAOwD,WAAgB7D,KAAKI,MAAMC,OAAO8D,UAAW5B,IAAK,KAE9M,uBAAGZ,MAAO,CAACK,MAAM,QAAjB,WAAgE,IAA7BhC,KAAKI,MAAMC,OAAOwD,WAAgB7D,KAAKI,MAAMC,OAAO8D,WAAW/B,QAAQ,GAA1G,a,GAnJoBxC,a,QCHnBgF,E,4MACjBxE,MAAM,CACFC,OAAO,GACPI,KAAK,I,kEAEW,IAAD,OACfC,IAAMC,IAAI,4CAA4CC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAACT,OAAOQ,EAAIE,KAAKA,KAAKN,KAAKI,EAAIE,KAAK2D,gBAAcxD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,uC,+BAG/J,OACE,6BACI,gCAAQ,4BAAI,kBAAC,IAAD,QACZ,gCAAQ,2CAAiBrB,KAAKI,MAAMK,OACnC,kBAACoE,EAAA,EAAD,CAAO3C,SAAO,EAAC4C,UAAQ,EAACC,OAAK,EAACC,KAAK,MACxC,+BACE,4BACE,2CACA,wCACA,0CACA,yCACA,8CAGJ,+BACGhF,KAAKI,MAAMC,OAAOoD,KAAI,SAAAwB,GAAQ,OAC3B,4BACA,4BAAKA,EAAShC,IACd,4BAAKgC,EAASpC,MACd,4BAAKoC,EAASC,YACd,4BAAKD,EAASE,OACd,4BAAKF,EAASE,MAAQF,EAASC,kBApBrC,S,GAVoCtF,aCIrBwF,E,uKAEjB,OACE,kBAAC,IAAMpC,SAAP,KACI,kBAAC,EAAD,MACA,6BACA,6BACA,6BACA,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,MAAMC,UAAW3B,IACnC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,YAAYC,UAAWX,OAIrD,kBAAC,EAAD,W,GAjB6BhF,aCIxB4F,MANf,WACE,OACE,kBAAC,EAAD,OCIgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzF,MAAK,SAAA0F,GACJA,EAAaC,gBAEdrF,OAAM,SAAAsF,GACLpF,QAAQoF,MAAMA,EAAMC,c","file":"static/js/main.7b0654e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nexport default class Navigationbar extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"top\">\r\n            <Navbar.Brand href=\"#home\">Corona Tracker</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/district\">All district</Nav.Link>\r\n            <Nav.Link href=\"/bd\">Bangladesh</Nav.Link>\r\n            </Nav>\r\n            \r\n        </Navbar>\r\n        <br/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nexport default class FooterFile extends Component {\r\n  render() {\r\n    return (\r\n        \r\n            <footer className=\"site-footer\">\r\n                <Container>\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-3\">\r\n                    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <p className=\"col-12 text-center\">\r\n                        This template is made by <i>@Md.Mahidul Islam</i> | Copyright &copy; 2020 All rights reserved\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n                </Container>\r\n                </footer>\r\n        \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nexport default class BodyPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bodycontainer\"><Container>{this.props.children}</Container></div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Row,Col,Card,ProgressBar} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { FcDataRecovery,FcAcceptDatabase,FcBadDecision } from \"react-icons/fc\";\r\nexport default class WorldCard extends Component {\r\n    state={\r\n        result:{\r\n            confirmed:'',recovered:'',deaths:'',date:''\r\n        },\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://covid19.mathdro.id/api').then(res=> this.setState({result:{confirmed:res.data.confirmed.value,recovered:res.data.recovered.value,deaths:res.data.deaths.value,date:res.data.lastUpdate}})).catch(err=>console.log('error to get worlddata'));\r\n    }\r\n    render() {\r\n        return (\r\n        <div>\r\n            <center><h2>WorldWide Results</h2></center>\r\n            <center><p>Date: {this.state.result.date.slice(0,10)} Update Time:{this.state.result.date.slice(11,16)}</p></center>\r\n                <Row >\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title><FcDataRecovery />{this.state.result.confirmed}</Card.Title>\r\n                            <Card.Text>\r\n                            Confirmed \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><FcAcceptDatabase/>{this.state.result.recovered}</Card.Title>\r\n                            <Card.Text>\r\n                            Recovered\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem' }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><FcBadDecision/>{this.state.result.deaths}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <ProgressBar>\r\n                                <ProgressBar striped variant=\"success\" label={`${((this.state.result.recovered*100)/this.state.result.confirmed).toFixed(2)}%`} now={(parseInt(this.state.result.recovered)*100)/parseInt(this.state.result.confirmed)} key={1} />\r\n                                \r\n                                <ProgressBar striped variant=\"danger\" label={`${((this.state.result.deaths*100)/this.state.result.confirmed).toFixed(2)}%`} now={(parseInt(this.state.result.deaths)*100)/parseInt(this.state.result.confirmed)} key={2} />\r\n                            </ProgressBar>\r\n        </div>\r\n        );\r\n    }\r\n    }\r\n","import React, { Component } from 'react';\r\nimport { Button,ProgressBar } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class AllCountry extends Component {\r\n    state={\r\n        countries:[],\r\n        countryname:'',\r\n        countryResult:{\r\n            confirmed:'',recovered:'',deaths:'',date:''\r\n        },\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://covid19.mathdro.id/api/countries').then(res => this.setState({countries:res.data.countries})).catch(err=> console.log(\"cannot get countries data\"));\r\n    }\r\n    countryclick = name =>{\r\n        this.setState({countryname:name});\r\n    }\r\n    getCountryResult= e =>{\r\n        axios.get(`https://covid19.mathdro.id/api/countries/${this.state.countryname}/`).then(res => this.setState({countryResult:{confirmed:res.data.confirmed.value,recovered:res.data.recovered.value,deaths:res.data.deaths.value,date:res.data.lastUpdate}}))\r\n    }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          \r\n            <div id=\"loading\" className=\"cntnr d-none flex-column align-items-center justify-content-center border ml-5 mr-5 p-0 mt-5 shadow\">\r\n                <span className=\"spinner-border text-primary\"></span>\r\n                <span className=\"mt-3\">Getting data...</span>\r\n            </div>\r\n            <div id=\"content\" className=\"cntnr ml-5 mr-5 p-0 mt-5 shadow border border-top-0 border-left-0\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-4 p-0\">\r\n                            <div className=\"border border-bottom-0 p-3 d-flex justify-content-between align-items-center\">\r\n                                <h5 className=\"m-0\">Countries</h5>\r\n                                <span id=\"countries_count\" className=\"badge badge-primary\">\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"pt-0 pr-3 pl-3 pb-3 border boder-bottom-0 border-top-0\">\r\n                                <input autocomplete=\"off\" id=\"search\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.setState({countryname:e.target.value})} value={this.state.countryname} className=\"form-control shadow-sm\" />\r\n                                <Button onClick={this.getCountryResult}>Get Result</Button>\r\n                            </div>\r\n                            <div className=\"border border-top-0 border-bottom-0 bdy\">\r\n                                <ul className=\"list-group\" id=\"countries_list\">\r\n                                    {this.state.countries.map(country =>\r\n                                        <li className=\"list-group-item rounded-0 border-top-0 border-left-0 border-right-0 list-group-item-action\" onClick={()=>this.countryclick(country.name)} >{country.name}</li>    \r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"col-8 p-0 fadex\">\r\n                        <div className=\"border border-left-0 border-right-0 p-3\">\r\n                            <h5 className=\"m-0 data\">Date: <i id=\"current_country\" className=\"text-secondary\">{this.state.countryResult.date.slice(0,10)}</i></h5>\r\n                        </div>\r\n                        <div className=\"bdy p-3\">\r\n                            \r\n                            <p className=\"float-right\"><span id=\"date\"></span></p>\r\n                            \r\n                            <h4>Confirmed 🤕</h4>\r\n                            \r\n                            <b>Total:</b> <span id=\"total_confirmed\">{this.state.countryResult.confirmed}</span>\r\n                            \r\n                            <hr />\r\n                            \r\n                            <h4>Deaths ☠</h4>\r\n                            \r\n                            <b>Total:</b> <span id=\"total_deaths\" style={{color:'red'}}>{this.state.countryResult.deaths}</span>\r\n                            \r\n                            <hr />\r\n                            \r\n                            <h4>Recovered 🤗</h4>\r\n                            \r\n                            <b>Total:</b> <span id=\"total_recovered\" style={{color:'green'}}>{this.state.countryResult.recovered}</span>\r\n                            \r\n                            <hr />\r\n                            \r\n                            <hr />\r\n                            <ProgressBar>\r\n                                <ProgressBar striped variant=\"success\" label={`${((this.state.countryResult.recovered*100)/this.state.countryResult.confirmed).toFixed(2)}%`} now={(parseInt(this.state.countryResult.recovered)*100)/parseInt(this.state.countryResult.confirmed)} key={1} />\r\n                                \r\n                                <ProgressBar striped variant=\"danger\" label={`${((this.state.countryResult.deaths*100)/this.state.countryResult.confirmed).toFixed(2)}%`} now={(parseInt(this.state.countryResult.deaths)*100)/parseInt(this.state.countryResult.confirmed)} key={2} />\r\n                            </ProgressBar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport WorldCard from './WorldCard';\r\nimport AllCountry from './AllCountry';\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <WorldCard />\r\n          <hr />\r\n          <AllCountry />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Row,Col,Card,ProgressBar} from 'react-bootstrap';\r\nimport { FcDataRecovery,FcAcceptDatabase,FcBadDecision } from \"react-icons/fc\";\r\nimport { BiTestTube } from \"react-icons/bi\";\r\nimport { AiFillCalculator } from \"react-icons/ai\";\r\nimport { BsFillAlarmFill,BsFillHeartFill,BsFillPersonPlusFill,BsFillPersonDashFill } from \"react-icons/bs\";\r\nimport axios from 'axios';\r\nexport default class Bangladesh extends Component {\r\n    state ={\r\n        result:{\r\n            totaldeath: '',death24:'',totalpositive:'',positive24:'',totalrecovered:'',recovered24:'',totaltest:'',test24:'',date:''\r\n    }\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona-bd.herokuapp.com/stats').then(res=> this.setState({result:{totaldeath:res.data.death.total,death24:res.data.death.last24,totalpositive:res.data.positive.total,positive24:res.data.positive.last24,totalrecovered:res.data.recovered.total,recovered24:res.data.recovered.last24,totaltest:res.data.test.total,test24:res.data.test.last24,date:res.data.updated_on}})).catch(err=>console.log('error to get worlddata'));\r\n    }\r\n  render() {\r\n      \r\n    return (\r\n        <div> \r\n            <center><h1>Bangladesh</h1></center>\r\n            <center><p>Update at: {this.state.result.date} </p></center>\r\n            <br />\r\n            <Row>\r\n                <Col sm={4}>\r\n                <h2><AiFillCalculator />Total</h2>\r\n                    <Row>\r\n                        \r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title><BiTestTube /> {this.state.result.totaltest}</Card.Title>\r\n                            <Card.Text>\r\n                            Tests\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'orange'}}><FcDataRecovery /> {this.state.result.totalpositive}</Card.Title>\r\n                            <Card.Text>\r\n                            Confirmed \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><FcAcceptDatabase/> {this.state.result.totalrecovered}</Card.Title>\r\n                            <Card.Text>\r\n                            ReCovered \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><FcBadDecision/> {this.state.result.totaldeath}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={8}>\r\n                    <center><h2><BsFillAlarmFill /> Last 24 Hours</h2></center>\r\n                    <Row>\r\n                        \r\n                        <Col >\r\n                        <Card  style={{ width: '18rem' }}>\r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title><BiTestTube /> {this.state.result.test24}</Card.Title>\r\n                            <Card.Text>\r\n                            New Tests\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    \r\n                <Row>\r\n                <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150 }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'orange'}}><BsFillPersonPlusFill /> {this.state.result.positive24}</Card.Title>\r\n                            <Card.Text>\r\n                            New Positive\r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150  }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'green'}}><BsFillHeartFill /> {this.state.result.recovered24}</Card.Title>\r\n                            <Card.Text>\r\n                            Newly ReCovered \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col sm>\r\n                    <Card  style={{ width: '18rem',height:150  }}>\r\n                    \r\n                        <Card.Body>\r\n                            <Card.Title style={{color:'red'}}><BsFillPersonDashFill /> {this.state.result.death24}</Card.Title>\r\n                            <Card.Text>\r\n                            Deaths \r\n                            </Card.Text>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <div>\r\n                    <h5>In 24 hrs</h5>\r\n                    <ProgressBar>\r\n                        <ProgressBar striped variant=\"success\" label={`${((this.state.result.recovered24*100)/this.state.result.test24).toFixed(2)}%`}  now={(this.state.result.recovered24*100)/this.state.result.test24} key={1} />\r\n                        <ProgressBar variant=\"warning\" label={`${((this.state.result.positive24*100)/this.state.result.test24).toFixed(2)}%`} now={(this.state.result.positive24*100)/this.state.result.test24} key={2} />\r\n                        <ProgressBar striped variant=\"danger\" label={`${((this.state.result.death24*100)/this.state.result.test24).toFixed(2)}%`} now={(this.state.result.death24*100)/this.state.result.test24} key={3} />\r\n                    </ProgressBar>\r\n                    <p style={{color:'red'}}>Death: {((this.state.result.death24*100)/this.state.result.test24).toFixed(2)}%</p>\r\n                    \r\n                    \r\n                    \r\n                    < hr />\r\n                    <h5>Untill Now</h5>\r\n                    <ProgressBar>\r\n                        <ProgressBar striped variant=\"success\" label={`${((this.state.result.totalrecovered*100)/this.state.result.totaltest).toFixed(2)}%`}  now={(this.state.result.totalrecovered*100)/this.state.result.totaltest} key={1} />\r\n                        <ProgressBar variant=\"warning\" label={`${((this.state.result.totalpositive*100)/this.state.result.totaltest).toFixed(2)}%`} now={(this.state.result.totalpositive*100)/this.state.result.totaltest} key={2} />\r\n                        <ProgressBar striped variant=\"danger\" label={`${((this.state.result.totaldeath*100)/this.state.result.totaltest).toFixed(2)}%`} now={(this.state.result.totaldeath*100)/this.state.result.totaltest} key={3} />\r\n                    </ProgressBar>\r\n                    <p style={{color:'red'}}>Death: {((this.state.result.totaldeath*100)/this.state.result.totaltest).toFixed(2)}%</p>\r\n                </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { BsFillAlarmFill } from \"react-icons/bs\";\r\nexport default class AllDistricts extends Component {\r\n    state={\r\n        result:[],\r\n        date:'',\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://corona-bd.herokuapp.com/district').then(res => this.setState({result:res.data.data,date:res.data.updated_on})).catch(err => console.log('error to get dictrictwise data'));\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n          <center><h2><BsFillAlarmFill /></h2></center>\r\n          <center><p>Update date: {this.state.date}</p></center>\r\n           <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>District Id</th>\r\n          <th>District</th>\r\n          <th>Prev_count</th>\r\n          <th>New Count</th>\r\n          <th>New positive</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.result.map(district => \r\n            <tr>\r\n            <td>{district.id}</td>\r\n            <td>{district.name}</td>\r\n            <td>{district.prev_count}</td>\r\n            <td>{district.count}</td>\r\n            <td>{district.count - district.prev_count}</td>\r\n          </tr>    \r\n        )}\r\n        \r\n      </tbody>\r\n    </Table> </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from './NavigationBar';\r\nimport FooterFile from './FooterFile';\r\nimport BodyPage from './BodyPage';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Bangladesh from './Bangladesh';\r\nimport AllDistricts from './AllDistricts';\r\nexport default class IndexFile extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <NavigationBar />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Router>\r\n              <BodyPage>\r\n                  <Switch>\r\n                      <Route exact path=\"/\" component={Home} />\r\n                      <Route exact path=\"/bd\" component={Bangladesh} />\r\n                      <Route exact path=\"/district\" component={AllDistricts} />\r\n                  </Switch>\r\n              </BodyPage>\r\n          </Router>\r\n          <FooterFile />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport IndexFile from './Components/IndexFile';\n\nfunction App() {\n  return (\n    <IndexFile />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}